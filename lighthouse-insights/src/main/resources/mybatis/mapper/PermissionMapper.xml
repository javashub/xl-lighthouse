<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dtstep.lighthouse.insights.dao.PermissionDao">
    <resultMap id="permissionResultMap" type="com.dtstep.lighthouse.insights.modal.Permission">
        <result property="id" column="id"/>
        <result property="ownerId" column="owner_id"/>
        <result property="ownerType" column="owner_type" typeHandler="com.dtstep.lighthouse.insights.types.OwnerTypeEnumTypeHandler"/>
        <result property="roleId" column="role_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.dtstep.lighthouse.insights.modal.Permission" >
        INSERT INTO ldp_permission (`owner_id`, `owner_type`,`role_id`, `create_time`, `update_time`) VALUES
        (
            #{ownerId,jdbcType=INTEGER},
            #{ownerType,jdbcType=INTEGER,typeHandler=com.dtstep.lighthouse.insights.types.OwnerTypeEnumTypeHandler},
            #{roleId,jdbcType=INTEGER},
            #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO ldp_permission (`owner_id`, `owner_type`,`role_id`, `create_time`, `update_time`) VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.ownerId,jdbcType=INTEGER},
            #{item.ownerType,jdbcType=INTEGER,typeHandler=com.dtstep.lighthouse.insights.types.OwnerTypeEnumTypeHandler},
            #{item.roleId,jdbcType=INTEGER},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>

    <select id="queryList" resultMap="permissionResultMap">
        SELECT `id`,`owner_id`,`owner_type`,`role_id`,`create_time`,`update_time`
        FROM ldp_permission
        <where>
            <if test="queryParam.roleId != null">
                AND role_id = #{queryParam.roleId}
            </if>
            <if test="queryParam.ownerType != null">
                AND owner_type = #{queryParam.ownerType}
            </if>
        </where>
        <bind name="offset" value="(pageNum-1)*pageSize"></bind>
        limit ${offset},#{pageSize}
    </select>

    <select id="existPermission" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM ldp_permission
        WHERE owner_id = #{ownerId} and owner_type = #{ownerType.ownerType} and role_id = #{roleId}
    </select>

    <select id="delete" resultType="Integer">
        delete
        FROM ldp_permission
        WHERE owner_id = #{ownerId} and owner_type = #{ownerType.ownerType} and role_id = #{roleId}
    </select>

    <select id="checkUserPermission" resultType="boolean">
        WITH RECURSIVE cte AS (
            SELECT id, pid
            FROM ldp_role
            WHERE id = #{roleId}
            UNION ALL
            SELECT t.id, t.pid
            FROM ldp_role t
                     INNER JOIN cte ON t.id = cte.pid
        )
        SELECT COUNT(1) > 0
        FROM cte
                 INNER JOIN (
            SELECT role_id
            FROM (
                     SELECT role_id
                     FROM ldp_permission
                     WHERE owner_id = #{userId}
                       AND owner_type = '1'
                     UNION ALL
                     SELECT role_id
                     FROM ldp_permission
                     WHERE owner_id IN (
                         SELECT department_id
                         FROM ldp_user
                         WHERE id = #{userId}
                     )
                       AND owner_type = '2'
                 ) temp
            GROUP BY role_id
        ) d
                            ON cte.id = d.role_id
    </select>

</mapper>