<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dtstep.lighthouse.insights.dao.ProjectDao">

    <resultMap id="projectResultMap" type="com.dtstep.lighthouse.insights.modal.Project">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="departmentId" column="department_id"/>
        <result property="privateType" column="private_type" typeHandler="com.dtstep.lighthouse.insights.types.PrivateTypeEnumTypeHandler"/>
        <result property="desc" column="desc"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.dtstep.lighthouse.insights.modal.Project" >
        INSERT INTO ldp_projects (`title`,`department_id`,`private_type`,`desc`,`create_time`,`update_time`) VALUES
        (
            #{title,jdbcType=VARCHAR},
            #{departmentId,jdbcType=INTEGER},
            #{privateType,jdbcType=INTEGER,typeHandler=com.dtstep.lighthouse.insights.types.PrivateTypeEnumTypeHandler},
            #{desc,jdbcType=VARCHAR},
            #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="update" parameterType="com.dtstep.lighthouse.insights.modal.Project">
        UPDATE ldp_projects
        <set>
            <if test="title != null">
                `title` = #{title},
            </if>
            <if test="departmentId != null">
                `department_id` = #{departmentId},
            </if>
            <if test="desc != null">
                `desc` = #{desc},
            </if>
            <if test="privateType != null">
                `private_type` = #{privateType.privateType},
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <select id="queryList" resultMap="projectResultMap">
        WITH RECURSIVE cte AS (
        SELECT d.id
        FROM ldp_departments d
        <where>
            <if test="queryParam.departmentIds != null and queryParam.departmentIds.size > 0">
                AND d.id IN
                <foreach item="item" index="index" collection="queryParam.departmentIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        UNION ALL
        SELECT d.id
        FROM ldp_departments d
        JOIN cte ON cte.id = d.pid
        )
        select * from (select `id`,`title`,`department_id`,`private_type`,`desc`,`create_time`,`update_time` from ldp_projects
        <where>
            <if test="queryParam.id!=null">
                AND id = #{queryParam.id}
            </if>
            <if test="queryParam.privateType!=null">
                AND private_type = #{queryParam.privateType}
            </if>
            <if test="queryParam.createStartTime!=null">
                AND create_time &gt;= #{queryParam.createStartTime}
            </if>
            <if test="queryParam.createEndTime!=null">
                AND create_time &lt;= #{queryParam.createEndTime}
            </if>
            <if test="queryParam.departmentIds != null and queryParam.departmentIds.size > 0">
                AND department_id IN(
                select id from cte
                )
            </if>
            <if test="queryParam.title != null">
                AND title LIKE CONCAT('%', #{queryParam.title}, '%')
            </if>
        </where>
        ) a
        <if test="queryParam.ownerId != null">
            inner join (select resource_id from ldp_roles r where r.role_type = '9'
            and r.id IN (select role_id from ldp_permissions where owner_id = #{queryParam.ownerId} and owner_type = '1')) b on a.id = b.resource_id
        </if>
    </select>


    <select id="countByDepartmentId">
        WITH RECURSIVE cte AS (
            SELECT d.id
            FROM ldp_departments d where id = #{id}
            UNION ALL
            SELECT d.id
            FROM ldp_departments d
                     JOIN cte ON cte.id = d.pid
        )
        select count(1) from ldp_projects where department_id IN (select id from cte)
    </select>

    <select id="queryById" resultMap="projectResultMap">
        SELECT `id`,`title`,`department_id`,`private_type`,`desc`,`create_time`,`update_time` FROM ldp_projects WHERE id = #{id}
    </select>

    <delete id="deleteById">
        delete from ldp_projects where id = #{id}
    </delete>
</mapper>