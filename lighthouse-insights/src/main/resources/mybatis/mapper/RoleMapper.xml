<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstep.lighthouse.insights.dao.RoleDao">

    <resultMap id="roleResultMap" type="com.dtstep.lighthouse.common.modal.Role">
        <result property="id" column="id"/>
        <result property="roleType" column="role_type" typeHandler="com.dtstep.lighthouse.insights.types.RoleTypeEnumTypeHandler"/>
        <result property="resourceId" column="resource_id"/>
        <result property="pid" column="pid"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.dtstep.lighthouse.common.modal.Role" >
        INSERT INTO ldp_roles (`role_type`, `resource_id`,`pid`, `create_time`, `update_time`,`desc`) VALUES
        (
                #{roleType,jdbcType=INTEGER,typeHandler=com.dtstep.lighthouse.insights.types.RoleTypeEnumTypeHandler},
                #{resourceId,jdbcType=INTEGER},
                #{pid,jdbcType=INTEGER},
                #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP},
                #{desc,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO ldp_roles (`role_type`, `resource_id`,`pid`, `create_time`, `update_time`,`desc`) VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.roleType,jdbcType=INTEGER,typeHandler=com.dtstep.lighthouse.insights.types.RoleTypeEnumTypeHandler},
            #{item.resourceId,jdbcType=INTEGER},
            #{item.pid,jdbcType=INTEGER},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP},
            #{desc,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <select id="queryById" resultMap="roleResultMap">
        SELECT `id`,`role_type`, `resource_id`,`pid`, `create_time`, `update_time` FROM ldp_roles WHERE id = #{id}
    </select>

    <select id="queryRole" resultMap="roleResultMap">
        SELECT `id`,`role_type`, `resource_id`,`pid`, `create_time`, `update_time` FROM ldp_roles
        WHERE role_type = #{roleTypeEnum.roleType} and resource_id = #{resourceId} limit 1
    </select>

    <select id="isRoleExist" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM ldp_roles
        WHERE role_type = #{roleTypeEnum.roleType} and resource_id = #{resourceId}
    </select>

    <select id="isChildRoleExist" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM ldp_roles
        WHERE pid=#{pid}
    </select>

    <update id="update" parameterType="com.dtstep.lighthouse.common.modal.Role">
        UPDATE ldp_roles
        <set>
            <if test="pid != null">
                `pid` = #{pid},
            </if>
            <if test="desc != null">
                `desc` = #{desc},
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime},
            </if>
        </set>
        WHERE role_type = #{roleType.roleType} and resource_id=#{resourceId}
    </update>

    <delete id="deleteById">
        delete from ldp_roles where id = #{id}
    </delete>

    <select id="queryListByPid" resultMap="roleResultMap">
        WITH RECURSIVE cte AS (
            SELECT id FROM ldp_roles WHERE pid = #{pid}
            UNION ALL
            SELECT t.id FROM ldp_roles AS t INNER JOIN cte ON t.pid = cte.id
        )
        SELECT a.`id` as `id`,`role_type`, `resource_id`,`pid`, `create_time`, `update_time` FROM ldp_roles a
        inner join (select id from cte) b on a.id = b.id
        <bind name="offset" value="(pageNum-1)*pageSize"></bind>
        limit ${offset},#{pageSize}
    </select>
</mapper>